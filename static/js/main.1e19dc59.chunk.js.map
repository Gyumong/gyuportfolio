{"version":3,"sources":["components/assets/weather.png","components/assets/GyuMoive.png","components/HomePage.js","components/AboutPage.js","components/SkillPage.js","components/ProjectPage.js","components/ContactPage.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePageBlock","styled","div","HomePage","AboutPageBlock","AboutTitle","AboutContent","AboutPage","AllBlock","SkillPageBlock","Title","SkillTitle","SkillContent","SkillPage","ProjectBlock","ProjectTitle","Contain","Box","Info","HeaderImage","weather","MovieImage","GyuMoive","ProjectPage","md","xs","ContactBlock","ContactTitle","ContactPage","Link","Scroll","NavBlock","TextBar","handleSetActive","to","document","getElementById","classList","add","Nav","id","activeClass","spy","smooth","offset","duration","onSetActive","GlobalStyle","createGlobalStyle","App","Element","name","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1e19dc59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/weather.eb6316a5.png\";","module.exports = __webpack_public_path__ + \"static/media/GyuMoive.87136e90.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst HomePageBlock = styled.div`\r\n    width:100%;\r\n    height:100vh;\r\n    background:black;\r\n    h1{\r\n        font-size:4vw;\r\n        font-weight:400;\r\n        text-transform:capitalize;\r\n        white-space:nowrap;\r\n        color:transparent;\r\n        margin:0;\r\n        position:absolute;\r\n        top:50%;\r\n        left:50%;\r\n        transform:translate(-50%,-50%);\r\n    }\r\n    h1::before{\r\n        content:\"안녕하세요 김민규의 포토폴리오입니다.\";\r\n        position:absolute;\r\n        top:0;\r\n        left:0;\r\n        width:100%;\r\n        height:100%;\r\n        color:#fff;\r\n        overflow:hidden;\r\n        border-right:3px solid white;\r\n        animation:typing 5s steps(40) infinite;\r\n    }\r\n    @keyframes typing{\r\n        0%{\r\n            width:0%;\r\n        }\r\n        50%{\r\n            width: 100%;\r\n        }\r\n        100%{\r\n            width:0%;\r\n        }\r\n    }\r\n`;\r\nfunction HomePage() {\r\n    return (\r\n      <HomePageBlock >\r\n          <h1>안녕하세요 김민규의 포토폴리오입니다.</h1>\r\n      </HomePageBlock>\r\n    );\r\n  }\r\n  \r\n  export default HomePage;","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst AboutPageBlock = styled.div`\r\n    display:flex;\r\n    justify-content:flex-start;\r\n    width:100%;\r\n    height:100%;\r\n    background-color:white;\r\n    @media only screen and (max-width: 768px) {\r\n    display: inherit;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst AboutTitle = styled.div`\r\n    margin-left: 6vw;\r\n    margin-right: 12vw;\r\n    width: 25vw;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    align-self: center;\r\n    h1{\r\n    position: relative;\r\n    display: inline-block;\r\n    font-size: 2em;\r\n    font-weight: 400;\r\n    margin: 30px 0;\r\n    }\r\n    @media only screen and (max-width: 768px) {\r\n    display: inline-block;\r\n    text-align: center;\r\n    margin: 0 auto;\r\n    }\r\n`;\r\nconst AboutContent =styled.div`\r\n    margin-bottom: 4rem;\r\n    margin-top: 4rem;\r\n    box-sizing: border-box;\r\n    padding: 1rem;\r\n    margin-right: 8vw;\r\n    width: 100%;\r\n    h1{\r\n    display: block;\r\n    font-size: 2em;\r\n    margin-block-start: 0.67em;\r\n    margin-block-end: 0.67em;\r\n    margin-inline-start: 0px;\r\n    margin-inline-end: 0px;\r\n    font-weight: bold;\r\n    }\r\n    @media only screen and (max-width: 768px) {\r\n    margin-top: 0;\r\n    width: 100%;\r\n    }\r\n`;\r\nfunction AboutPage() {\r\n    return (\r\n        <AboutPageBlock>\r\n            <AboutTitle>\r\n                <h1>About me</h1>\r\n            </AboutTitle>\r\n            <AboutContent>\r\n                <h1>새로운 기술을 배우는데 두려움이 없는 개발자</h1>\r\n                    <p>\r\n                    어릴때 부터 어려운 수학 문제를 단계별로 풀어가며 마침내 풀리면 그 쾌감이 너무 좋았습니다. 20살 넘어 접한 프로그래밍도 그와 비슷했고 그때부터 개발자를 꿈꾸게 되었습니다. \r\n                    그 중 React를 접하면서 React의 Component 단위 작성을 통한 생산성과 유지보수을 용이하게 하는 점이 흥미로웠습니다.\r\n                    </p>\r\n                    <p>\r\n                    저는 빠르게 변화하는 기술 들에 흥미를 느끼며 공부하고 있습니다. 최근에는 UX Design에 관심을 두고 있습니다.\r\n                    </p>\r\n            </AboutContent>\r\n        </AboutPageBlock>\r\n\r\n    )\r\n}\r\n\r\nexport default AboutPage\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nconst AllBlock =styled.div`\r\n    background-color:Black;\r\n    h1{color:white;}\r\n    border-top: 2px solid black;\r\n    height: 100%;\r\n    width: 100%;\r\n    border-bottom: 2px solid #fff;\r\n`;\r\nconst SkillPageBlock = styled.div`\r\n    display:flex;\r\n    justify-content:flex-start;\r\n    width:100%;\r\n    height:100%;\r\n    background-color:black;\r\n    color:white;\r\n    @media only screen and (max-width: 768px) {\r\n    display: inherit;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: center;\r\n    }\r\n`;\r\nconst Title = styled.div`\r\n    padding-top:2rem;\r\n    text-align:center;\r\n    margin-bottom:3rem;\r\n`;\r\nconst SkillTitle = styled.div`\r\n    margin-left: 6vw;\r\n    margin-right: 12vw;\r\n    width: 25vw;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    align-self: center;\r\n    h3{\r\n    color:white;\r\n\r\n    }\r\n    @media only screen and (max-width: 768px) {\r\n    display: inline-block;\r\n    text-align: center;\r\n    margin: 0 auto;\r\n    }\r\n`;\r\nconst SkillContent =styled.div`\r\n    margin-bottom: 1rem;\r\n    margin-top: 1rem;\r\n    box-sizing: border-box;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    padding: 1rem;\r\n    margin-right: 8vw;\r\n    width: 100%;\r\n    p{\r\n    display: block;\r\n    font-size: 1em;\r\n    margin-block-start: 0.67em;\r\n    margin-block-end: 0.67em;\r\n    margin-inline-start: 0px;\r\n    margin-inline-end: 0px;\r\n    font-weight: bold;\r\n    }\r\n    @media only screen and (max-width: 768px) {\r\n    margin-top: 0;\r\n    width: 100%;\r\n    }\r\n`;\r\n\r\nfunction SkillPage() {\r\n    return (\r\n        <AllBlock>\r\n            <Title>\r\n               <h1>Skill</h1> \r\n            </Title>\r\n        <SkillPageBlock>\r\n            <SkillTitle>\r\n                <h3>\r\n                Front\r\n                </h3>\r\n                <h3>Dev Tools</h3>\r\n                <h3>etc</h3>\r\n            </SkillTitle>\r\n            <SkillContent>\r\n                \r\n                    <p>\r\n                    HTML, CSS, JavaScript, React, Redux, Koa, MongoDB, SPA\r\n                    </p>\r\n                    <p>\r\n                    Git, GitHub\r\n                    </p>\r\n                    <p>\r\n                    TypeScript, Ant Design, Styled-Components\r\n                    </p>\r\n                \r\n            </SkillContent>\r\n        </SkillPageBlock>\r\n        </AllBlock>        \r\n    )\r\n}\r\n\r\nexport default SkillPage;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport weather from './assets/weather.png';\r\nimport GyuMoive from './assets/GyuMoive.png';\r\nimport {Row,Col} from 'antd';\r\n\r\nconst ProjectBlock =styled.div`\r\n    background-color:white;\r\n    height: 100%;\r\n    width: 100%;\r\n    border-bottom: 2px solid #fff;\r\n`;\r\n\r\nconst ProjectTitle = styled.div`\r\n    padding-top:3rem;\r\n    text-align:center;\r\n    margin-bottom:3rem;\r\n`;\r\n\r\nconst Contain = styled.div`\r\n    height: 360px;\r\n    width: 100%;\r\n    max-width: 80vw;\r\n    border-radius: 4px;\r\n    margin: 0 auto 30px;\r\n    background: #fff;\r\n    box-shadow: 0 3px 6px rgba(0,0,0,.2), 0 3px 6px rgba(0,0,0,.2);\r\n\r\n    @media only screen and (max-width: 768px) {\r\n    max-width: 100%;\r\n    height: 50%;\r\n    display: flex;\r\n    flex-direction:column;\r\n    }\r\n`;\r\nconst Box =styled.div`\r\n    border-right:1px solid black;\r\n    width: 100%;\r\n    height: 360px;\r\n    margin-right: 2rem;\r\n    @media only screen and (max-width: 768px) {\r\n        border:none;\r\n    }\r\n`;\r\n\r\nconst Info =styled.div`\r\n    \r\n    width:100%;\r\n    height:360px;\r\n    font-size:1.3em;\r\n    h1{\r\n        margin:1rem 0 1rem 2rem;\r\n        font-weight:700;\r\n    }\r\n    h2{\r\n        margin:1rem 0 1rem 2rem;\r\n        font-weight:400;\r\n    }\r\n    p{\r\n        margin:1rem 0 1rem 2rem;\r\n        \r\n    }\r\n    ul{\r\n        list-style:none;\r\n       \r\n        padding:0;\r\n        \r\n    }\r\n    li{\r\n        display: inline-block;\r\n        cursor:pointer;\r\n        margin:1rem 0 1rem 1rem;\r\n    }\r\n    li:first-child{\r\n        margin:0 0 0 2rem;\r\n    }\r\n    @media only screen and (max-width: 768px) {\r\n        font-size:10px;\r\n        p{\r\n            margin:1rem 0 1rem 2rem;\r\n            text-align: left;\r\n        }\r\n        li{\r\n            margin:0 0 1rem 1rem;\r\n        }\r\n        li:first-child{\r\n            margin-top:1rem;\r\n        }\r\n    }\r\n`;\r\nconst HeaderImage = styled.div`\r\n    width:100%;\r\n    height:360px;\r\n    background-repeat:no-repeat;\r\n    background-position:center,center;\r\n    background-image: url(${weather});\r\n    background-size:cover;\r\n`;\r\n\r\nconst MovieImage = styled.div`\r\n    width:100%;\r\n    height:360px;\r\n    background-repeat:no-repeat;\r\n    background-position:center,center;\r\n    background-image: url(${GyuMoive});\r\n    background-size:contain;\r\n`;\r\n\r\nfunction ProjectPage() {\r\n\r\n    return (\r\n        <ProjectBlock>\r\n            <ProjectTitle>\r\n                <h1>Project</h1>\r\n            </ProjectTitle>\r\n                <Contain>\r\n            <Row>\r\n\r\n                    <Col md={6} xs={24}>\r\n                    <Box>\r\n                        <HeaderImage />\r\n              \r\n                    </Box>\r\n                    </Col>\r\n                    <Col md={18} xs={24}>\r\n                    <Info>\r\n\r\n                        <h1>WhatWeather</h1>\r\n                        <h2>\r\n                            개발기간 : 2020.08.20~2020.08.25\r\n                        </h2>\r\n                        <p>\r\n                            React,KakaoMap,Openweather API를 이용해 주소 검색시 그 주소에 따른 날씨를 나타내주는 앱입니다.\r\n                        </p>\r\n                        <ul>\r\n                            <li>#React</li>\r\n                            <li>#Axios</li>\r\n                            <li>#style-components</li>\r\n                            <li>#Antd</li>\r\n                        </ul>\r\n                    </Info>\r\n                    </Col> \r\n            </Row>\r\n                </Contain>\r\n                <Contain>\r\n                    <Row>\r\n                    <Col md={6} xs={24}>\r\n                    <Box>\r\n                        <MovieImage />\r\n              \r\n                    </Box>\r\n                    </Col>\r\n                    <Col md={18} xs={24}>\r\n                    <Info>\r\n\r\n                        <h1>GyuMovie</h1>\r\n                        <h2>\r\n                            개발기간 : 2020.07.20~2020.07.25\r\n                        </h2>\r\n                        <p>\r\n                                TheMovie API를 이용해 영화정보를 보여주는 앱입니다.\r\n                            <br/>\r\n                            Koa,MongoDB를 사용해로그인,회원가입 jwt로 회원인증시스템을 구현해 주었습니다.\r\n                        </p>\r\n                        <ul>\r\n                            <li>#React</li>\r\n                            <li>#Redux</li>\r\n                            <li>#React-router</li>\r\n                            <li>#Koa</li>\r\n                            <li>#Mongoose</li>\r\n                            <li>#jwt</li>\r\n                            <li>#style-components</li>\r\n                            <li>#material-ui</li>\r\n                        </ul>\r\n                    </Info>\r\n                    </Col> \r\n                    </Row>\r\n                </Contain>\r\n        </ProjectBlock>\r\n    )\r\n}\r\n\r\nexport default ProjectPage\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst ContactBlock =styled.div`\r\n    height: 50vh;\r\n    width: 100%;\r\n    background:black;\r\n    text-align: center;\r\n    margin: 0;\r\n    padding: 0;\r\n    h1{\r\n    color:white;\r\n    display: inline-block;\r\n    font-size: 2.4em;\r\n    font-weight: 400;\r\n    margin: 30px 0;\r\n    }\r\n    p{\r\n    color:white;\r\n    display: block;\r\n    margin-block-start: 1em;\r\n    margin-block-end: 1em;\r\n    margin-inline-start: 0px;\r\n    margin-inline-end: 0px;\r\n    font-size: 1.9em;\r\n    font-weight: 500;\r\n    }\r\n`;\r\nconst ContactTitle = styled.div`\r\n    text-align:center;\r\n    margin-bottom:2rem;\r\n`;\r\nfunction ContactPage() {\r\n    return (\r\n        <ContactBlock>\r\n            <ContactTitle>\r\n                <h1>\r\n                    Contact\r\n                </h1>\r\n                <p>\r\n                \r\n                    Email: rlaalsrb3559@naver.com\r\n                </p>\r\n                    </ContactTitle>\r\n        </ContactBlock>\r\n    )\r\n}\r\n\r\nexport default ContactPage\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport Scroll from 'react-scroll';\r\n\r\nlet Link = Scroll.Link;\r\n\r\n\r\nconst NavBlock= styled.div`\r\n    display:flex;\r\n    position: fixed;\r\n    width: 100%;\r\n    z-index:1000;\r\n    opacity: 0.6;\r\n    &:hover{\r\n        display:flex;\r\n    }\r\n    &:active{\r\n        display:flex;\r\n    }\r\n    @media only screen and (max-width: 768px) {\r\n        display:none;\r\n    }\r\n`;\r\nconst TextBar= styled.div`\r\n    display: block;\r\n    background: rgba(0,0,0,.6);\r\n    height: 64px;\r\n    width: 100%;\r\n    \r\n    ul{\r\n        display:flex;\r\n        justify-content:center;\r\n        list-style: none;\r\n        margin: 0;\r\n        padding:0;\r\n    }\r\n    li{ \r\n        margin-right: 3rem;\r\n        display: list-item;\r\n        padding: 1.5rem;\r\n        border: 0;\r\n        cursor: pointer;\r\n        opacity: 0.6;\r\n        &:hover{\r\n            opacity:1;\r\n        }\r\n    }\r\n    a{\r\n        color:#fff;\r\n        font-size:16px;\r\n        &:hover{\r\n            opacity:1;\r\n        }\r\n    }\r\n    li:last-child{\r\n        margin:0;\r\n    }\r\n`;\r\n\r\n function handleSetActive(to) {\r\n    let first_item = document.getElementById('first-item');\r\n    first_item.classList.add('active');\r\n  }\r\nfunction Nav() {\r\n    return (\r\n        <NavBlock>\r\n            <TextBar>\r\n                <ul>\r\n                    <li id=\"first-item\">\r\n                    <Link activeClass=\"active\" to=\"Home\" spy={true} smooth={true} offset={0} duration={500} onSetActive={handleSetActive}>\r\n                        Home\r\n                    </Link>  \r\n                    </li>\r\n                    <li>\r\n                    <Link activeClass=\"active\" to=\"About\" spy={true} smooth={true} offset={-70} duration={500} onSetActive={handleSetActive}>\r\n                        About    \r\n                    </Link>\r\n                    </li>\r\n                    <li>\r\n                    <Link activeClass=\"active\" to=\"Skill\" spy={true} smooth={true} offset={-70} duration={500} onSetActive={handleSetActive}>\r\n                        Skill    \r\n                    </Link>\r\n                    </li>\r\n                    <li>\r\n                    <Link activeClass=\"active\" to=\"Project\" spy={true} smooth={true} offset={-70} duration={500} onSetActive={handleSetActive}>\r\n                        Project    \r\n                    </Link>\r\n                    </li>\r\n                    <li>\r\n                    <Link activeClass=\"active\" to=\"Contact\" spy={true} smooth={true} offset={50} duration={500} onSetActive={handleSetActive}>\r\n                        Contact\r\n                    </Link>\r\n                    </li>\r\n                </ul>\r\n            </TextBar>\r\n        </NavBlock>\r\n    )\r\n}\r\nexport default Nav\r\n","import React from 'react';\nimport './App.css';\nimport HomePage from './components/HomePage';\nimport AboutPage from './components/AboutPage';\nimport SkillPage from './components/SkillPage';\nimport ProjectPage from './components/ProjectPage';\nimport ContactPage from './components/ContactPage';\nimport Nav from './components/Nav';\nimport Scroll from 'react-scroll';\nimport { createGlobalStyle } from 'styled-components'\n\n\n\nconst GlobalStyle =  createGlobalStyle `\n  body{\n    @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;700&display=swap');\n    font-family: 'Noto Sans KR', sans-serif;\n    margin:0;\n    box-sizing:border-box;\n    background-color:black;\n  }\n`;\nfunction App() {\n  let Element = Scroll.Element;\n  return (\n    <>\n      <GlobalStyle />\n      <Nav/>\n      <Element name=\"Home\" >\n      <HomePage/>\n      </Element>\n      <Element name=\"About\" >\n      <AboutPage/>\n      </Element>\n      <Element name=\"Skill\" >\n      <SkillPage/>\n      </Element>\n      <Element name=\"Project\" >\n      <ProjectPage/>\n      </Element>\n      <Element name=\"Contact\" >\n      <ContactPage/>\n      </Element>\n      \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}